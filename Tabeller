package no.hvl.dat100.lab5.tabeller;

public class Tabeller {
	public static void main(String[] args) {
		int[] tab = {4, 5, 6};
		int[] tab2 = {1, 2, 3};

		int tall = 5;
		skrivUt(tab);
		System.out.println(tilStreng(tab));
		System.out.println(summer(tab));
		System.out.println(summer2(tab));
		System.out.println(summer3(tab));
		System.out.println(finnesTall(tab, tall));
		System.out.println(posisjonTall(tab, tall));
		System.out.println(erSortert(tab));
		System.out.println(settSammen(tab, tab2));
		reverser(tab);
	}
	// a)
	public static void skrivUt(int[] tabell) {
		for(int i=0; i<tabell.length; i++) {
			System.out.println(tabell[i]);
		}
	}

	// b)
	public static String tilStreng(int[] tabell) {
		String str = "\"[";
		for(int i=0; i<tabell.length; i++) {
			str+=tabell[i];
			if(i==tabell.length-1) {
				break;
			}
			str+=",";
		}
		return str+"]\"";
	}

	// c)
	public static int summer(int[] tabell) {
		int sum = 0;
		for(int i=0; i<tabell.length; i++) {
			sum+=tabell[i];
			;
		}
		return sum;
	}
	public static int summer2(int[] tabell) {
		int sum = 0;
		int i= 0;
		while(i<tabell.length) {
			sum+=tabell[i];
			i++;
		}
		return sum;
	}
	public static int summer3(int[] tabell) {
		int sum = 0;
		for(int element: tabell) {
			sum+=element;
			;
		}
		return sum;
	}

	// d)
	public static boolean finnesTall(int[] tabell, int tall) {
		
		boolean sum = false;
		for(int element: tabell) {
			if(tall==element) {
				sum=true;
				break;
			}
		}
		return sum;	

	}

	// e)
	public static int posisjonTall(int[] tabell, int tall) {
		int pos = -1;
		for(int i=0; i<tabell.length; i++) {
			if(tall==tabell[i]) {
				pos=i;
				break;
			}
		}
		return pos;	

	}

	// f)
	public static int[] reverser(int[] tabell) {
		int[] revers= new int[tabell.length];
		
		for(int i=0; i<tabell.length; i++) {
			
			revers[i]=tabell[tabell.length-1-i];
			
			System.out.print(revers[i]+" ");
		}
		return revers;	
	}

	// g)
	public static boolean erSortert(int[] tabell) {
		boolean sum = true;
		for(int i=0; i<tabell.length-1; i++) {
			if(tabell[i]>tabell[i+1]) {
				sum=false;
				break;
			}
		}
		return sum;	
	}

	// h)
	public static int[] settSammen(int[] tabell1, int[] tabell2) {
		int tabslength = tabell1.length+tabell2.length;
		int[] nytab= new int[tabslength];
		
		int j = 0;
		for(int i=0; i<=tabslength-1; i+=2) {
			nytab[i]=tabell1[j];
			nytab[i+1]=tabell2[j];
			j+=1;
		}
		return nytab;
	}
}
